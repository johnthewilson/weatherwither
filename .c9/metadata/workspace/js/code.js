{"changed":true,"filter":false,"title":"code.js","tooltip":"/js/code.js","value":"\n$(document).ready(function(){\n\n    var skycons = new Skycons({\n                            \"color\": \"#90E5FD\"\n                        });\n    var latlon;\n    var link= \"https://api.forecast.io/forecast/5effb18e2860e72b6280a0a6d8ee9fe6/\";\n    var newlink;\n    var location;\n    var temperature;\n    var weather;\n    var summary;\n    var icon;\n    var current;\n    var daily;\n    var hours;\n    setInterval(getTime,1000);\n   //run the geocoder to get the IP\n   navigator.geolocation.getCurrentPosition(success, error, options);\n    var options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n    };\n    function success(pos) {\n        var crd = pos.coords;\n        var lat=crd.latitude;\n        var long=crd.longitude;\n        console.log(\"time\");\n        $.ajax({\n            url: \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\"+lat +\",\"+long+\"&key=AIzaSyAySpWk9d1vW4zr55muNkZBFRXoclO3n3c\",\n         \n            // Tell jQuery we're expecting JSONP\n            dataType: \"json\",\n            // Work with the response\n            success: function( response ) {\n                console.log( response.results[1].formatted_address);\n                location=response.results[1].formatted_address;\n\n                 // server response\n            }\n        });\n           $.ajax({\n            url: \"https://api.forecast.io/forecast/5effb18e2860e72b6280a0a6d8ee9fe6/\"+lat +\",\"+long,\n         \n            // Tell jQuery we're expecting JSONP\n            dataType: \"jsonp\",\n            // Work with the response\n            success: function( response ) {\n                console.log( response);\n                skycons.set(\"icon1\",response.currently.icon);\n                console.log(response.currently.icon);\n\n                temperature=Math.round(response.currently.apparentTemperature);\n                current=response.currently;\n                var sunset=response.daily.data[0].sunsetTime;\n                var sunrise=response.daily.data[0].sunriseTime;\n                weather=response.currently.summary;\n                summary=response.daily.summary;\n                $('#location').html(location);\n                $('#temperature').append(temperature);\n                $('#temperature').attr(\"value\", temperature);\n                $('#weather').html(weather);\n                $('#summary').html(summary);\n                console.log(current.time + \"&\"+sunrise + sunset )\n                if(current.time > sunrise && current.time < sunset)\n                {\n                    console.log(\"here\");\n                    $('.circle').css(\"background\", \"url(/images/cold_fall.jpg) \");\n                    //$('.circle').css(\"background-size\", \"400px 400px\");\n                }\n                else{\n                    console.log(\"or her ajbvsjkhcvlksbvs\");\n                    $('.circle').css(\"background\", \"url(/images/lightsnow.jpg) no-repeat \");\n                    //$('.circle').css(\"background-size\", \"3 px 399px\");\n                   // $('#circle').css('background-image', 'url(' + \"/images/warmsunset.jpg\" + ')');\n                }\n            }\n        });\n        console.log('Your current position is:');\n        console.log('Latitude : ' + crd.latitude);\n        console.log('Longitude: ' + crd.longitude);\n        console.log('More or less ' + crd.accuracy + ' meters.');\n    };\n        \n    function error(err) {\n        console.warn('ERROR(' + err.code + '): ' + err.message);\n    };\n\n    skycons.play();\n    // Create a new JavaScript Date object based on the timestamp\n    // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n    function getTime(){\n       var date = new Date();\n    // Hours part from the timestamp\n       hours = date.getHours();\n    // Minutes part from the timestamp\n    var minutes = \"0\" + date.getMinutes();\n    // Seconds part from the timestamp\n    var seconds = \"0\" + date.getSeconds();\n    // Will display time in 10:30:23 format\n    var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n    \n \n    //manipulation the DOm with the location data \n   \n    $('#time').html(formattedTime);\n    \n    }\n \n    function changeToCel() {\n        var temp=$(\"#temperature\");\n        var cel=$(\"#cel\");\n        var far=$(\"#far\");\n        var tempVal=parseFloat(temp.text());\n         console.log(tempVal);\n         console.log(\"celc clickec\")\n        if(cel.hasClass(\"active\")){\n            console.log(\"already in celcius\");\n        }\n        else\n        {\n           var cTempVal = (tempVal - 32) * (5 / 9); \n           console.log(\"converted to\"+ cTempVal);\n            temp.html(cTempVal);\n            cel.addClass('active');\n            far.removeClass('active');\n            far.addClass('inactive');\n            \n        }\n      \n    }\n    \n    function changeToFar() {\n        var temp=$(\"#temperature\");\n        var cel=$(\"#cel\");\n        var far=$(\"#far\");\n        var tempVal=parseFloat(temp.text());\n         console.log(tempVal);\n         console.log(\"fahr clickec\")\n        if(far.hasClass(\"active\")){\n            console.log(\"already in fahrenhwit\");\n        }\n        else\n        {\n           var fTempVal = (tempVal * (9 / 5)) + 32; \n           console.log(\"converted to\"+ fTempVal);\n            temp.html(fTempVal);\n            cel.removeClass('active');\n            cel.addClass('inactive');\n            far.addClass('active');\n            \n        }\n      \n    }\n    $('#far').on('click', changeToFar);\n    $('#cel').on('click', changeToCel);\n    \n    /*change background depending on the time*/\n//         function changeBackground(){\n            \n//           // if(hours>1){\n//                 $('#circle').css({\"background\":url:\"/images\"});\n// //}\n            \n            \n//         }\n    // setbackground($('#temperature').attr(\"value\"), $('#degrees').attr(\"value\" ), current, daily);\n/*    \n    \n    console.log(promise1);\n    $.when(promise1)\n    \n    .then(function(data){\n        latlon=data.loc;\n        location.push(data.region);\n        location.push(data.city);\n        location.push(data.country);\n     \n        //manipulation the DOm with the location data \n        $('#location').append(location[1] + \", \");\n        $('#location').append(location[0] + \", \");\n        $('#location').append(location[2]);\n     \n        return latlon;\n    })\n     \n     //below function uses the return from the above function as the parameter.\n    .then(function(data){\n        newlink= link.concat(data);\n        console.log(newlink);\n        return $.ajax({\n            url:newlink,\n            dataType:\"jsonp\"\n        });\n    })\n    \n    .done(function(data){\n        //Todo \n        //manipulate the DOM with the Temperature and other weather Elements \n        console.log(data.currently.icon);\n        skycons.set(\"icon1\",data.currently.icon);\n        $('#temperature').html(Math.round(data.currently.apparentTemperature));\n        $('#temperature').attr(\"value\", Math.round(data.currently.apparentTemperature));\n        $('#weather').html(data.currently.summary);\n        $('#summary').html(data.daily.summary);\n    })\n    skycons.play();\n    //   $( \"button\" ).click(function() {\n    //     var temp= $('#temperature').val();\n    //     console.log(temp);\n    //      });\n    \n\n    function changeText() {\n        var temp;\n        if ($('#degrees').attr(\"value\") === \"째F\") {\n            $('#degrees').attr(\"value\",\"째C\");\n            temp = ($('#temperature').attr(\"value\") - 32) * 5/9;\n        }\n        else {\n            $('#degrees').attr(\"value\",\"째F\");\n            temp = ($('#temperature').attr(\"value\") * 9/5) + 32;\n        }\n        temp = Math.round(temp);\n        $('#temperature').html(temp);\n        $('#temperature').attr(\"value\", temp);\n    }\n\n    $('#degrees').on('click', changeText);\n\n\n    //If weather is in F, based on  F degrees and rain/sunny/windy to display background\n    if ($('#degrees').attr(\"value\") === \"째F\") {\n        //range of temperatures that are warm\n            //if warm and sunny\n            //if warm and cloudy\n            //if warm and rainy\n            \n        //range of temp that are mild\n            //if mild and sunny\n            //if mild and cloudy\n            //if mild and rainy\n            \n        //range of temp that are cold\n            //if cold and sunny\n            //if cold and cloudy\n            //if cold and windy\n            //if cold and rainy\n            //if cold and icy or snowy\n            \n    }\n    //Else weather is in C, based on C degrees and rain/sunny/windy to display background\n    else { \n        //range of temperatures that are warm\n            //if warm and sunny\n            //if warm and cloudy\n            //if warm and rainy\n            \n        //range of temp that are mild\n            //if mild and sunny\n            //if mild and cloudy\n            //if mild and rainy\n            \n        //range of temp that are cold\n            //if cold and sunny\n            //if cold and cloudy\n            //if cold and windy\n            //if cold and rainy\n            //if cold and icy or snowy    \n    }\n\n\n\n\n*/\n\n\n});\n \n//  /* Forecast api key \n//  5effb18e2860e72b6280a0a6d8ee9fe6\n//  */","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":941.5,"scrollleft":0,"selection":{"start":{"row":80,"column":49},"end":{"row":80,"column":49},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":57,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1444366908000}